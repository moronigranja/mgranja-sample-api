/*
 * Calcula Juros API
 *
 * Calcula valor final de uma aplicação de Juros por determinado tempo
 *
 * OpenAPI spec version: 1.0.0
 * Contact: moronigranja@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Mgranja.api2.Attributes;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.AspNetCore.Annotations;
using System.ComponentModel.DataAnnotations;

namespace Mgranja.api2.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CalculaJurosController : ControllerBase
    { 
        /// <summary>
        /// Calcula juros compostos sobre um valor inicial
        /// </summary>
        /// <remarks>Calcula o valor final de uma aplicacao financeira apos uma quantidade de meses utilizando juros compostos. A taxa de juros é buscada diretamente de uma API. </remarks>
        /// <param name="valorinicial">valor inicial de uma aplicação usando virgula como separador decimal</param>
        /// <param name="meses">numero de meses completos de duracao da aplicacao financeira</param>
        /// <response code="200">valor final calculado</response>
        /// <response code="400">parametro incorreto ou invalido</response>
        [HttpGet]
        [Route("/MGranja/api2/1.0.0/calculajuros")]
        [ValidateModelState]
        [SwaggerOperation("CalculaJuros")]
        [SwaggerResponse(statusCode: 200, type: typeof(string), description: "valor final calculado")]
        public virtual ActionResult<string> CalculaJuros([FromQuery][Required()]string valorinicial, [FromQuery][Required()]int? meses)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(string));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            string exampleJson = null;
            exampleJson = "\"\"";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
